% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/irp_preprocess.R
\name{irp_preprocess}
\alias{irp_preprocess}
\title{General purpose preprocessing of spectra for predictions.}
\usage{
irp_preprocess(
  x,
  do_interpolate = TRUE,
  interpolate_start = NULL,
  interpolate_dw = 1,
  do_clip = TRUE,
  clip_range,
  do_interpolate_region = FALSE,
  interpolate_region_range,
  do_bc = TRUE,
  bc_method = "rubberband",
  bc_degree = 2,
  bc_cutoff = 0,
  do_smooth = TRUE,
  smooth_method = "sg",
  smooth_p = 3,
  smooth_n = smooth_p + 3 - smooth_p\%\%2,
  smooth_m = 1,
  smooth_ts = 0,
  smooth_k = 111,
  do_normalise = TRUE,
  normalise_method = "area",
  do_bin = TRUE,
  bin_width = 10,
  do_scale = TRUE,
  scale_center = TRUE,
  scale_scale = TRUE
)
}
\arguments{
\item{x}{An object of class \code{\link[ir:ir_new_ir]{ir}} (it is assumed
that \code{x} is not yet preprocessed).}

\item{do_interpolate}{A logical value indicating if spectra should be
interpolated using \code{\link[ir:ir_interpolate]{ir_interpolate}}.}

\item{interpolate_start}{See \code{ir_interpolate} (parameter \code{start}).}

\item{interpolate_dw}{See \code{ir_interpolate} (parameter \code{dw}).}

\item{do_clip}{A logical value indicating if spectra should be
clipped using \code{\link[ir:ir_clip]{ir_clip}}.}

\item{clip_range}{See \code{ir_clip} (parameter \code{range}).}

\item{do_interpolate_region}{A logical value indicating if spectra should
be linearly interpolated in selected regions using
\code{\link[ir:ir_interpolate_region]{ir_interpolate_region}}.}

\item{interpolate_region_range}{See \code{ir_interpolate_region} (parameter
\code{range}).}

\item{do_bc}{A logical value indicating if spectra should be
baseline corrected using \code{\link[ir:ir_bc]{ir_bc}}.}

\item{bc_method}{See \code{ir_bc} (parameter \code{method}).}

\item{bc_degree}{See \code{ir_bc} (parameter \code{degree}).}

\item{bc_cutoff}{A numeric value representing the wavenumber
units to remove at the start and end of each spectrum in \code{x} during
baseline correction. This may be done to remove artifacts due to baseline
correction.}

\item{do_smooth}{A logical value indicating if spectra should be
smoothed using \code{\link[ir:ir_smooth]{ir_smooth}}.}

\item{smooth_method}{See \code{ir_smooth} (parameter \code{method}).}

\item{smooth_p}{See \code{ir_smooth} (parameter \code{p}).}

\item{smooth_n}{See \code{ir_smooth} (parameter \code{n}).}

\item{smooth_m}{See \code{ir_smooth} (parameter \code{m}).}

\item{smooth_ts}{See \code{ir_smooth} (parameter \code{ts}).}

\item{smooth_k}{See \code{ir_smooth} (parameter \code{k}).}

\item{do_normalise}{A logical value indicating if spectra should be
normalised using \code{\link[ir:ir_normalise]{ir_normalise}}.}

\item{normalise_method}{See \code{ir_normalise} (parameter \code{method}).}

\item{do_bin}{A logical value indicating if spectra should be
binned using \code{\link[ir:ir_bin]{ir_bin}}.}

\item{bin_width}{See \code{ir_bin} (parameter \code{width}).}

\item{do_scale}{A logical value indicating if spectral variables should be
scaled using \code{\link[base:scale]{scale}}.}

\item{scale_center}{See \code{scale} (parameter \code{center}). To scale each
spectral variable independently, provide a vector with length equal to the
number of spectral variables returned after preprocessing.}

\item{scale_scale}{See \code{scale} (parameter \code{scale}). To scale each
spectral variable independently, provide a vector with length equal to the
number of spectral variables returned after preprocessing.}
}
\value{
A data frame with spectra in rows and a column for each spectral
variable after preprocessing.
}
\description{
\code{irp_preprocess} is a function that provides a general-purpose
preprocessing workflow for spectra. The workflow comprises interpolation,
clipping, baseline correction, smoothing (including optionally
derivatization), normalization, binning, and scaling. All these steps are
optionally, but occur on a fixed order that cannot be changed.
}
\examples{
\dontrun{
# get sample data
x <- ir::ir_sample_data

# example preprocessing
res <-
  irpeat::irp_preprocess(
    x,
    do_interpolate = TRUE,
    interpolate_start = NULL,
    interpolate_dw = 1,
    do_bc = TRUE,
    do_clip = FALSE,
    do_interpolate_region = FALSE,
    bc_method = "rubberband",
    bc_cutoff = 10,
    do_smooth = FALSE,
    do_normalise = TRUE,
    normalise_method = "area",
    do_bin = TRUE,
    bin_width = 10,
    do_scale = TRUE,
    scale_center = TRUE,
    scale_scale = TRUE
  )
  }
}
