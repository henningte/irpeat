% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/irp_predict.R
\name{irp_predict}
\alias{irp_predict}
\alias{irp_content}
\title{Batch-prediction of sample properties}
\usage{
irp_predict(x, variable, ...)

irp_content(x, variable, ...)
}
\arguments{
\item{x}{An object of class \code{\link[ir:ir_new_ir]{ir}}. See the individual
prediction models for further data requirements.}

\item{variable}{A character vector with one or more values that define for which
components contents are computed for the spectra in \code{x}. Currently allowed values
are:
\describe{
\item{"all"}{\code{irp_content} computes all of the values below.}
\item{"klason_lignin_content_1"}{Klason lignin mass fraction [g/g]
as computed by \code{\link[=irp_content_klh_hodgkins]{irp_content_klh_hodgkins()}}.}
\item{"holocellulose_content_1"}{Holocellulose mass fraction [g/g]
as computed by \code{\link[=irp_content_klh_hodgkins]{irp_content_klh_hodgkins()}}.}
\item{"klason_lignin_content_2"}{Klason lignin mass fraction [g/g]
as computed by \code{\link[=irp_klason_lignin_content_2]{irp_klason_lignin_content_2()}}.}
\item{"holocellulose_content_2"}{Holocellulose mass fraction [g/g]
as computed by \code{\link[=irp_holocellulose_content_2]{irp_holocellulose_content_2()}}.}
\item{"eac_1"}{Electron accepting capacity as computed by \code{\link[=irp_eac_1]{irp_eac_1()}}.}
\item{"edc_1"}{Electron donating capacity as computed by \code{\link[=irp_edc_1]{irp_edc_1()}}.}
}}

\item{...}{Further arguments passed to individual prediction functions.}
}
\value{
An object of class \code{\link[ir:ir_new_ir]{ir}} with additional columns
containing the predictions for the spectra in \code{x}.
}
\description{
Wrapper function to batch-predict sample properties.
}
\note{
\describe{
\item{\code{value = "klason_lignin_content_1"} and
\code{value = "holocellulose_content_1"}}{
No warnings are shown and no values are exported to disk.
}
}
}
\examples{
library(ir)

irp_predict(ir::ir_sample_data[1, ], variable = "klason_lignin_content_1")

\dontrun{
irp_predict(ir::ir_sample_data[1, ], variable = "klason_lignin_content_2")
irp_predict(ir::ir_sample_data[1, ], variable = "holocellulose_content_2")
irp_predict(ir::ir_sample_data[1, ], variable = "eac_1")
irp_predict(ir::ir_sample_data[1, ], variable = "edc_1")
}

}
